<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.aspectj</groupId>
		<artifactId>aspectj-parent</artifactId>
		<version>1.9.7.BUILD-SNAPSHOT</version>
	</parent>

	<artifactId>aspectjrt</artifactId>
	<packaging>pom</packaging>
	<name>AspectJ Runtime</name>

	<dependencies>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>runtime</artifactId>
			<version>${project.version}</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>

			<!-- skip creation of test-jar in here -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<executions>
					<execution>
						<id>test-jar</id>
						<phase>none</phase>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
              <!--
                  Version set in aspectj-parent in order to override version from super POM, e.g. 2.2-beta-5 from
                  https://maven.apache.org/ref/3.6.3/maven-model-builder/super-pom
              -->
				<executions>
					<execution>
						<id>aspectjrt-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<finalName>aspectjrt-${project.version}</finalName>
							<appendAssemblyId>false</appendAssemblyId>
							<archive>
								<manifestEntries>
									<Automatic-Module-Name>org.aspectj.runtime</Automatic-Module-Name>
								</manifestEntries>

								<manifestSections>
									<manifestSection>
										<name>org/aspectj/lang/</name>
										<manifestEntries>

											<Specification-Title>AspectJ Runtime Classes</Specification-Title>
											<Specification-Version>${project.version}</Specification-Version>
											<Specification-Vendor>https://www.eclipse.org/aspectj/</Specification-Vendor>

											<Implementation-Title>org.aspectj.runtime</Implementation-Title>
											<Implementation-Version>${project.version}</Implementation-Version>
											<Implementation-Vendor>https://www.eclipse.org/aspectj/</Implementation-Vendor>

											<Bundle-Name>AspectJ Runtime</Bundle-Name>
											<Bundle-Version>${project.version}</Bundle-Version>
											<!--
												WARNING: Please avoid line breaks in manifest values! They are passed on like this:
												Assembly Plugin -> Plexus Archiver -> JRE java.util.jar.Manifest.write(OutputStream).

												The JRE Manifest class inserts hard line breaks always after 72 characters, no matter if those
												72 characters contain line feeds, tabs or spaces. Hence, it can happen that unwanted blank lines
												end up in the middle of a manifest section, making the manifest invalid. Calls like e.g.
												'java -cp aspectjtools.jar org.aspectj.tools.ajc.Main' can then fail with the absolutely
												unexpected error 'Could not find or load main class org.aspectj.tools.ajc.Main'.

												Alexander Kriegisch created this bug ticket:
												https://bugs.java.com/bugdatabase/view_bug.do?bug_id=JDK-8263924

												In IntelliJ IDEA you can deactivate wrapping text inside XML tags like this:
												File | Settings | Editor | Code Style | XML | Wrap text -> deactivate
											-->
											<Bundle-Copyright>(C) Copyright 1999-2001 Xerox Corporation, 2002 Palo Alto Research Center, Incorporated (PARC), 2003-2020 Contributors. All Rights Reserved</Bundle-Copyright>
										</manifestEntries>
									</manifestSection>
								</manifestSections>
							</archive>

							<descriptors>
								<descriptor>aspectjrt-assembly.xml</descriptor>
							</descriptors>
						</configuration>
					</execution>

					<execution>
						<id>aspectjrt-src-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<classifier>sources</classifier>
							<finalName>aspectjrt-${project.version}</finalName>
							<archive>
							</archive>
							<descriptors>
								<descriptor>aspectjrt-sources-assembly.xml</descriptor>
							</descriptors>
						</configuration>
					</execution>

				</executions>
			</plugin>

		</plugins>
	</build>
</project>
